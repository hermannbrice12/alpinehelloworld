image: docker:latest
services:
  - docker:dind  

stages:
  - build
  - test_acceptation  
  - release_image

docker-build:
  stage: build
  script:
    - docker build -t alpinehelloworld .
    - docker save alpinehelloworld > alpinehelloworld.tar  # Sauvegarde de l'image dans un fichier tar
  artifacts:
    paths:
      - alpinehelloworld.tar  # Utiliser l'artefact pour le job suivant

test_acceptation:
  stage: test_acceptation
  script:
    - docker load < alpinehelloworld.tar  # Charger l'image Docker sauvegardée
    - docker run -d -p 80:5000 -e PORT=5000 --name webapp alpinehelloworld  # Lancer l'application dans un conteneur
    - apk --no-cache add curl  # Installer curl dans le conteneur pour le test
    - sleep 5  # Attendre quelques secondes que le conteneur démarre correctement
    - curl "http://docker" | grep "Hello world"  # Vérification avec curl dans le conteneur

release_image:
  stage: release_image
  script:
    - docker load < alpinehelloworld.tar
    - docker tag alpinehelloworld "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker tag alpinehelloworld "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
  
